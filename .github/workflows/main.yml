name: Terraform Workflow

on:
  push:
    branches:
      - main

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Azure login
        run: az login

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.15.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

  plan:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Azure login
        run: az login

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.15.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan
      - name: Save Terraform Plan
        uses: actions/upload-artifact@v2
        with:
          name: tfplan
          path: tfplan

  apply:
    runs-on: ubuntu-latest
    needs: plan
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Azure login
        run: az login

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.15.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

  destroy:
    runs-on: ubuntu-latest
    needs: apply
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Azure login
        run: az login

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.15.0

      - name: Terraform Init
        run: terraform init

      - name: Manual Approval
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'Terraform destroy approved.'
          branch: ${{ github.ref }}
          commit_user_name: ${{ github.actor }}
          commit_user_email: ${{ github.actor }}@users.noreply.github.com
          commit_author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>

      - name: Terraform Destroy
        run: terraform destroy -auto-approve

# name: Terraform Workflow

# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:

# permissions:
#       # id-token: write
#       contents: read

# jobs:
#   deploy_infra:
#     name: Deploy Infrastructure
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Azure login
#         run: az login
  
#         # run:  az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID
        
#         # uses: azure/login@v1
#         # with:
#         #   client-id: ${{ secrets.AZURE_CLIENT_ID }}
#         #   tenant-id: ${{ secrets.AZURE_TENANT_ID }}
#         #   subscription-id: ${{ secrets.AZURE_SUBCRIPTION_ID }}
        
#         # with:
#         #   creds: ${{ secrets.AZURE_CREDENTIALS }}
      
#       - name: Azure CLI script
#         uses: azure/CLI@v1
#         with:
#           azcliversion: latest
#           inlineScript: |
#             az account show

#         # Terraform
#       - name: Set up Terraform
#         uses: hashicorp/setup-terraform@v1
#         with:
#           terraform_version: 0.15.0 

#       - name: Terraform Init
#         run: terraform init

#       - name: Terraform Plan
#         id: plan
#         run: terraform plan -out=tfplan

#       - name: Check Drift
#         run: echo "::set-output name=drift_detected::$(grep 'No changes' tfplan | wc -l)"

#       - name: Terraform Apply
#         run: terraform apply -auto-approve
      
#       # - name: Terraform Destroy
#       #   run: terraform destroy -auto-approve

#   # manage_secrets:
#   #   name: Manage Secrets
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #     - name: Checkout Repository
#   #       uses: actions/checkout@v2

#   #     - name: Azure login
#   #       run: az login
        
#   #     - name: Azure CLI script
#   #       uses: azure/CLI@v1
#   #       with:
#   #         azcliversion: latest
#   #         inlineScript: |
#   #           az account show

#   #     - name: Set up Terraform
#   #       uses: hashicorp/setup-terraform@v1
#   #       with:
#   #         terraform_version: 1.0.0

#   #     - name: Terraform Init
#   #       run: terraform init

#   #     - name: Terraform plan
#   #       run: terraform plan -out main.tfplan

#   #     - name: Terraform Apply
#   #       run: terraform apply -auto-approve
      
#   #     - name: Terraform Destroy
#   #       run: terraform destroy -auto-approve

#   destroy_infra:
#     name: Destroy Infraestructure
#     runs-on: ubuntu-latest
#     needs: deploy_infra
#     # if: github.event_name == 'workflow_dispatch'
#     steps:
#       - name: Azure login
#         run: az login

#       - name: Checkout Repository
#         uses: actions/checkout@v2

#       - name: Set up Terraform
#         uses: hashicorp/setup-terraform@v1
#         with:
#           terraform_version: 0.15.0
#           # cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

#       - name: Terraform Init
#         run: terraform init

#       - name: Terraform Destroy
#         run: terraform destroy -auto-approve

  
      
